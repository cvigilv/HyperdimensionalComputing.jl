var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API Reference","title":"API Reference","text":"CurrentModule = HyperdimensionalComputing","category":"page"},{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"This page contains the complete API reference for HyperdimensionalComputing.jl.","category":"page"},{"location":"api/#Index","page":"API Reference","title":"Index","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#Functions","page":"API Reference","title":"Functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [HyperdimensionalComputing]\nOrder = [:function]","category":"page"},{"location":"api/#HyperdimensionalComputing.bipol2grad-Tuple{Number}","page":"API Reference","title":"HyperdimensionalComputing.bipol2grad","text":"bipol2grad(x::Number)\n\nMaps a bipolar number in [-1, 1] to the [0, 1] interval.\n\n\n\n\n\n","category":"method"},{"location":"api/#HyperdimensionalComputing.grad2bipol-Tuple{Number}","page":"API Reference","title":"HyperdimensionalComputing.grad2bipol","text":"grad2bipol(x::Number)\n\nMaps a graded number in [0, 1] to the [-1, 1] interval.\n\n\n\n\n\n","category":"method"},{"location":"api/#Types","page":"API Reference","title":"Types","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [HyperdimensionalComputing]\nOrder = [:type]","category":"page"},{"location":"api/#Constants","page":"API Reference","title":"Constants","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [HyperdimensionalComputing]\nOrder = [:constant]","category":"page"},{"location":"api/#Macros","page":"API Reference","title":"Macros","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [HyperdimensionalComputing]\nOrder = [:macro]","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"CurrentModule = HyperdimensionalComputing","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This page contains examples demonstrating how to use HyperdimensionalComputing.jl.","category":"page"},{"location":"examples/#Basic-Usage","page":"Examples","title":"Basic Usage","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using HyperdimensionalComputing\n\n# Add your examples here","category":"page"},{"location":"examples/#Advanced-Examples","page":"Examples","title":"Advanced Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# More complex examples","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = HyperdimensionalComputing","category":"page"},{"location":"#HyperdimensionalComputing.jl","page":"Home","title":"HyperdimensionalComputing.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HyperdimensionalComputing.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"HyperdimensionalComputing.jl provides...","category":"page"},{"location":"#Manual","page":"Home","title":"Manual","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"api.md\",\n    \"examples.md\"\n]\nDepth = 2","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\"]","category":"page"},{"location":"developers/#Developer-guide","page":"Developer guide","title":"Developer guide","text":"","category":"section"},{"location":"developers/#Formatting","page":"Developer guide","title":"Formatting","text":"","category":"section"},{"location":"developers/","page":"Developer guide","title":"Developer guide","text":"We use Runic.jl to format the HyperdimensionalComputing.jl codebase. We recommend installing pre-commit to automatically set up pre-commit hooks that check code formatting. To install the pre-commit hooks, run pre-commit install in the root directory. After installation, the hooks will run automatically on each commit.","category":"page"},{"location":"developers/","page":"Developer guide","title":"Developer guide","text":"Since implementing comprehensive development tooling can be challenging, pull requests that don't follow Runic.jl formatting will be automatically revised with review comments indicating the required changes. We strongly encourage contributors to format their code before submitting pull requests, as large unformatted PRs can be difficult to review and may cause significant delays in the review process.","category":"page"}]
}
